app {

  server {
    protocol = "http"
//    domain = "flowdev.neoap.com"
    host = "10.1.29.248"
    port = 30387
    url = "theia"
  }

  http {
    interface = "0.0.0.0"
    port = 30387
  }

  admin{
    account = "theia_admin"
    password = "theia_admin"
  }

  clientPath = "data/"

  kurento {
    ip = "*****"
    port = "*****"
  }

  rtp{
    ip = "10.1.29.246"
    port = "30390"
  }

  processor{
    ip = "10.1.29.248"
    port = 30388
  }

  distributor{
    useIp = false
    ip = "10.1.29.248"
    port = 30389
    domain = "media.seekloud.com:50443"
  }

  client {
    appIds = ["processor","pcClient","webClient"]
    secureKeys = ["0379a0aaff63c1ce","ca98d851ecc06b92","89443179082e02f8"]
  }

  tls{
    password="****"
    p12Path="****"
  }

  magic{
    ip = "*****"
    port = 30386
  }
}

dependence {

  roomManager.config {
    authCheck = false
    tokenExistTime = 2592000//seconds
    guestTokenExistTime = 172800 //seconds
  }

  hestia.config {
    appId = "roomManager"
    secureKey = "KJHkadhkaA92KJKsina"
    protocol = "http"
    imgProtocol = "http"
    domain = "pic.neoap.com"
    //    host = "10.1.29.250"
    host = "10.1.29.245"
    port = 30226
  }

  email.config{
    host = "smtp.exmail.qq.com"
    port = "25"
    addresserEmail = "flowservice@neotel.com.cn"
    addresserPwd = "SKld1234!@#$"
    domain = "flowdev"  //开发
    //    ccAddress = ["dongruoyan@neotel.com.cn"]
  }
}

slick.db {
  url = "jdbc:postgresql://10.1.29.248:5432/theia"
  user = "theia"
  password = "1qaz@WSX"
  maximumPoolSize = 3
  connectTimeout = 30000
  idleTimeout = 300000
  maxLifetime = 900000
}


session {

  cookie {
    name = "theia"
    domain = none
    path = "/"
    secure = false
    httpOnly = true
    maxAge = 1 days
  }
  encryptData = false
  serverSecret = "0a(do3Dr^20+Gfhf92*md4sK343dg-aj53Kd4ymc23;M0;[0gfdytyrewrei2rl4;zt3;lmO3lrtsy"

}


akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  # http.server.websocket.periodic-keep-alive-max-idle = 1 second
  http.server.websocket.periodic-keep-alive-mode = pong
  actor {

    my-blocking-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"

      thread-pool-executor {
        # Keep alive time for threads
        keep-alive-time = 60s

        # Define a fixed thread pool size with this property. The corePoolSize
        # and the maximumPoolSize of the ThreadPoolExecutor will be set to this
        # value, if it is defined. Then the other pool-size properties will not
        # be used.
        #
        # Valid values are: `off` or a positive integer.
        fixed-pool-size = off

        # Min number of threads to cap factor-based corePoolSize number to
        core-pool-size-min = 16

        # The core-pool-size-factor is used to determine corePoolSize of the
        # ThreadPoolExecutor using the following formula:
        # ceil(available processors * factor).
        # Resulting size is then bounded by the core-pool-size-min and
        # core-pool-size-max values.
        core-pool-size-factor = 100.0

        # Max number of threads to cap factor-based corePoolSize number to
        core-pool-size-max = 256

        # Minimum number of threads to cap factor-based maximumPoolSize number to
        max-pool-size-min = 16

        # The max-pool-size-factor is used to determine maximumPoolSize of the
        # ThreadPoolExecutor using the following formula:
        # ceil(available processors * factor)
        # The maximumPoolSize will not be less than corePoolSize.
        # It is only used if using a bounded task queue.
        max-pool-size-factor = 100.0

        # Max number of threads to cap factor-based maximumPoolSize number to
        max-pool-size-max = 256

        # Specifies the bounded capacity of the task queue (< 1 == unbounded)
        task-queue-size = -1

        # Specifies which type of task queue will be used, can be "array" or
        # "linked" (default)
        task-queue-type = "linked"

        # Allow core threads to time out
        allow-core-timeout = on
      }

      throughput = 100
    }

  }


}


